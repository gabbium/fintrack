name: Publish Docker Images

on:
  workflow_call:
    inputs:
      version:
        description: "Tag version (eg. 1.2.3)"
        required: true
        type: string
  workflow_dispatch:
    inputs:
      version:
        description: "Tag version (eg. 1.2.3)"
        required: true
        type: string

permissions:
  contents: read

concurrency:
  group: docker-publish-${{ github.run_id }}
  cancel-in-progress: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: ledger-api
            image: gabbium/fintrack-ledger-api
            dockerfile: ./services/Ledger/src/Fintrack.Ledger.Api/Dockerfile

          - name: ledger-migrationservice
            image: gabbium/fintrack-ledger-migrationservice
            dockerfile: ./services/Ledger/src/Fintrack.Ledger.MigrationService/Dockerfile

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate input version
        id: ver
        run: |
          V="${{ inputs.version }}"
          if [[ -z "$V" ]]; then
            echo "Version input is empty"; exit 1
          fi
          if [[ ! "$V" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-.+)?$ ]]; then
            echo "Invalid semver: $V"; exit 1
          fi
          echo "version=$V" >> "$GITHUB_OUTPUT"

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: gabbium
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push ${{ matrix.name }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ matrix.image }}:latest
            ${{ matrix.image }}:${{ steps.ver.outputs.version }}
          labels: |
            org.opencontainers.image.version=${{ steps.ver.outputs.version }}
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

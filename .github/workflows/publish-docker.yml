name: Publish Docker Images

on:
  workflow_call:
    inputs:
      version:
        description: "Tag version (e.g., 1.2.3)"
        required: true
        type: string
      push_latest:
        description: "Also push :latest tag"
        required: false
        default: false
        type: boolean
  workflow_dispatch:
    inputs:
      version:
        description: "Tag version (e.g., 1.2.3)"
        required: true
        type: string
      push_latest:
        description: "Also push :latest tag"
        required: false
        default: false
        type: boolean

permissions:
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      IMAGE_VERSION: ${{ inputs.version }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: ledger-api
            image: gabbium/fintrack-ledger-api
            dockerfile: ./services/Ledger/src/Fintrack.Ledger.Api/Dockerfile
            context: .
          - name: ledger-migrationservice
            image: gabbium/fintrack-ledger-migrationservice
            dockerfile: ./services/Ledger/src/Fintrack.Ledger.MigrationService/Dockerfile
            context: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate inputs (SemVer)
        shell: bash
        run: |
          if [[ -z "${IMAGE_VERSION:-}" ]]; then
            echo "ERROR: IMAGE_VERSION is empty."
            exit 1
          fi
          if [[ ! "${IMAGE_VERSION}" =~ ^[0-9]+\.[0-9]+\.[0-9]+([.-][0-9A-Za-z.-]+)?(\+[0-9A-Za-z.-]+)?$ ]]; then
            echo "ERROR: IMAGE_VERSION '${IMAGE_VERSION}' is not a valid semantic version."
            exit 1
          fi
          echo "âœ” IMAGE_VERSION validated: ${IMAGE_VERSION}"

      - name: Setup QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392

      - name: Setup Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Login to Docker Hub
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker metadata (${{ matrix.name }})
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f
        with:
          images: ${{ matrix.image }}
          tags: |
            type=raw,value=${{ inputs.version }}
            ${{ inputs.push_latest && 'type=raw,value=latest' || '' }}
          labels: |
            org.opencontainers.image.version=${{ inputs.version }}
            org.opencontainers.image.source=${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build & Push ${{ matrix.name }}
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

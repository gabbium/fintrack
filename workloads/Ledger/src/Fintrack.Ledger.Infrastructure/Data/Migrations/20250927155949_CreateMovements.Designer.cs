// <auto-generated />
using Fintrack.Ledger.Domain.MovementAggregate;

#nullable disable

namespace Fintrack.Ledger.Infrastructure.Data.Migrations
{
    [DbContext(typeof(LedgerDbContext))]
    [Migration("20250927155949_CreateMovements")]
    partial class CreateMovements
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ledger")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "ledger", "movement_kind", new[] { "expense", "income" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Fintrack.Ledger.Domain.MovementAggregate.Movement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)")
                        .HasColumnName("amount");

                    b.Property<string>("Description")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("description");

                    b.Property<MovementKind>("Kind")
                        .HasColumnType("ledger.movement_kind")
                        .HasColumnName("kind");

                    b.Property<DateTimeOffset>("OccurredOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("occurred_on");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_movements");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_movements_user_id");

                    b.ToTable("movements", "ledger", t =>
                        {
                            t.HasCheckConstraint("ck_movement_amount_positive", "amount > 0");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}

name: fintrack

services:
  portainer:
    image: portainer/portainer-ce:2.21.5
    restart: unless-stopped
    ports: ["9443:9443"]
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  postgres:
    image: postgres:16.4
    restart: unless-stopped
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports: ["5432:5432"]
    volumes:
      - ./db/postgres/00-init.sql:/docker-entrypoint-initdb.d/00-init.sql:ro
      - postgres_data:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.2
    restart: unless-stopped
    command: ["start-dev"]
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KC_BOOTSTRAP_ADMIN_PASSWORD}
    ports: ["8080:8080"]
    volumes:
      - keycloak_data:/opt/keycloak/data
    depends_on:
      - postgres

  prometheus:
    image: prom/prometheus:v2.55.1
    restart: unless-stopped
    volumes:
      - ./observability/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus

  tempo:
    image: grafana/tempo:2.6.1
    restart: unless-stopped
    command: ["-config.file=/etc/tempo.yml"]
    volumes:
      - ./observability/tempo/tempo.yml:/etc/tempo.yml:ro

  loki:
    image: grafana/loki:2.9.8
    restart: unless-stopped
    command: ["-config.file=/etc/loki/loki.yml"]
    volumes:
      - ./observability/loki/loki.yml:/etc/loki/loki.yml:ro

  otelcol:
    image: otel/opentelemetry-collector-contrib:0.112.0
    restart: unless-stopped
    command: ["--config=/etc/otelcol-config.yml"]
    ports:
      - "4317:4317"
      - "4318:4318"
    volumes:
      - ./observability/otelcol/otelcol-config.yml:/etc/otelcol-config.yml:ro
    depends_on:
      - prometheus
      - loki
      - tempo

  grafana:
    image: grafana/grafana:11.2.0
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
    ports: ["3000:3000"]
    volumes:
      - grafana_data:/var/lib/grafana
      - ./observability/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./observability/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
    depends_on:
      - prometheus
      - tempo
      - loki

volumes:
  portainer_data:
  postgres_data:
  keycloak_data:
  prometheus_data:
  grafana_data:
